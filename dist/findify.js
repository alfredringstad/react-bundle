var t=require("react");function e(){return(e=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t}).apply(this,arguments)}var n={autocomplete:"change:suggestions",recommendation:"change:items",search:"change:items","smart-collection":"change:items"},r=function(){return new Promise(function(t){return(window.findifyCallbacks=window.findifyCallbacks||[]).push(function(e){return t(e)})})};exports.default=function(o){var i=o.type,c=o.config,a=void 0===c?{}:c,s=o.history,u=o.options,l=void 0===u?{}:u,f=o.widgetKey,g=void 0===f?Math.random().toString(36).substring(7):f,d=t.useRef(null),m=t.useState(!1),h=m[0],p=m[1],y=t.useState(!1),v=y[0],w=y[1];return t.useEffect(function(){if(d.current){var t=void 0;return function(){try{Promise.resolve(r()).then(function(r){t=r,s&&(t.utils.history=s);var o=function(t,e,n,r){return"recommendation"!==t?r:n.getIn(["features","recommendations","#"+(r.slot||e.getAttribute("id"))]).mergeDeep(r)}(i,d.current,t.config,e({widgetKey:g,disableAutoRequest:!0},a));t.widgets.attach(d.current,"smart-collection"===i?"search":i,o);var c=t.widgets.get(g),u=e({},c.config.get("meta")&&c.config.get("meta").toJS()||{},l);"recommendation"===i&&(u.slot=a.slot,u.type=a.type||o.get("type")),"smart-collection"===i&&(u.slot=a.slot||t.utils.collectionPath()),c.agent.defaults(u).once("error",function(){return w(!0)}).once(n[i],function(t){t.length||w(!0),p(!0)}),["search","smart-collection"].includes(i)&&c.agent.applyState(t.utils.getQuery())})}catch(t){return Promise.reject(t)}}(),function(){t.widgets.detach(g)}}},[d]),[d,h,v]},exports.waitForFindify=r;
//# sourceMappingURL=findify.js.map
