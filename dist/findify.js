var e=require("react"),t=require("react-router-dom");function n(){return(n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var r={autocomplete:"change:suggestions",recommendation:"change:items",search:"change:items"};module.exports=function(i){var o=i.type,u=i.config,a=void 0===u?{}:u,c=i.options,s=void 0===c?{}:c,f=i.widgetKey,d=void 0===f?Math.random().toString(36).substring(7):f,g=e.useRef(null),l=e.useState(!1),m=l[0],h=l[1],y=t.useHistory();return e.useEffect(function(){if(g.current){var e=void 0;try{return Promise.resolve(new Promise(function(e){return(window.findifyCallbacks=window.findifyCallbacks||[]).push(function(t){return e(t)})})).then(function(t){(e=t).history=y;var i=function(e,t,n,r){var i="recommendation"===e&&n.getIn(["features","recommendations","#"+t.getAttribute("id")])||n.getIn(["features",e]);return n.withMutations(function(n){return n.mergeDeep(i).mergeDeep(r).set("node",t).set("cssSelector","findify-"+e+" findify-widget-"+r.widgetKey).toJS()})}(o,g.current,e.config,n({},a,{widgetKey:d,disableAutoRequest:!0}));e.widgets.attach(g.current,o,i);var u=e.widgets.get(d),c=u.config.get("meta")&&u.config.get("meta").toJS()||{};u.agent.defaults(n({},c,s)).once(r[o],function(){return h(!0)}),["search","smart-collection"].includes(o)&&u.agent.applyState(e.utils.getQuery())})}catch(e){Promise.reject(e)}return function(){if(!e)return shouldRender=!1;e.widgets.detach(d)}}},[g]),[g,m]};
//# sourceMappingURL=findify.js.map
