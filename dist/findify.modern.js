import{useRef as e,useState as t,useEffect as n}from"react";import{useHistory as r}from"react-router-dom";function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}const o={autocomplete:"change:suggestions",recommendation:"change:items",search:"change:items"},a=()=>Math.random().toString(36).substring(7);export default({type:s,config:c={},options:g={},widgetKey:u=a()})=>{const d=e(null),[f,l]=t(!1),m=r();return n(()=>{if(!d.current)return;let e;return(async()=>{e=await new Promise(e=>(window.findifyCallbacks=window.findifyCallbacks||[]).push(t=>e(t))),e.history=m;const t=((e,t,n,r)=>{const i="recommendation"===e&&n.getIn(["features","recommendations","#"+t.getAttribute("id")])||n.getIn(["features",e]);return n.withMutations(n=>n.mergeDeep(i).mergeDeep(r).set("node",t).set("cssSelector",`findify-${e} findify-widget-${r.widgetKey}`).toJS())})(s,d.current,e.config,i({},c,{widgetKey:u,disableAutoRequest:!0}));e.widgets.attach(d.current,s,t);const n=e.widgets.get(u),r=n.config.get("meta")&&n.config.get("meta").toJS()||{};n.agent.defaults(i({},r,g)).once(o[s],()=>l(!0)),["search","smart-collection"].includes(s)&&n.agent.applyState(e.utils.getQuery())})(),()=>{if(!e)return shouldRender=!1;e.widgets.detach(u)}},[d]),[d,f]};
//# sourceMappingURL=findify.modern.js.map
